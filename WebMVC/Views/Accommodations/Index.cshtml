@using RentNest.Core.Enums;
@using RentNest.Core.UtilHelper;
@model IEnumerable<RentNest.Web.Models.AccommodationIndexViewModel>
@{
	ViewData["Title"] = "Phòng";
}
@{
	var hasSearched = ViewBag.HasSearched != null && (bool)ViewBag.HasSearched;
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
<section class=" ftco-animate hero-wrap-boxed">
	<div class="hero-bg" style="background-image: url('images/bg_3.jpg');">
		<div class="overlay"></div>
		<div class="container">
			<div class="row no-gutters align-items-center justify-content-start" style="min-height: 160px;">
				<div class="col-md-12 mb-5 mb-lg-5">
					<p class="breadcrumbs mb-1">
						<span class="mr-2">
							<a href="/trang-chu">Trang chủ <i class="ion-ios-arrow-forward"></i></a>
						</span>
						<span>Danh sách các phòng <i class="ion-ios-arrow-forward"></i></span>
					</p>
				</div>
			</div>
			<form asp-action="Search" method="post" asp-controller="Accommodations">
				<input type="hidden" name="ProvinceId" id="provinceId" />
				<input type="hidden" name="DistrictId" id="districtId" />
				<input type="hidden" name="WardId" id="wardId" />
				<div class="row g-2 align-items-end">
					<div class="col-md">
						<label for="provinceDropdown" class="form-label text-white fw-semibold">
							Tỉnh/Thành phố <span class="text-danger">*</span>
						</label>
						<select id="provinceDropdown" class="form-control text-white bg-transparent border-light" required>
							<option value="">Chọn tỉnh/thành phố...</option>
						</select>
						<input name="provinceName" type="hidden" id="provinceName" />
						<div class="invalid-feedback">Vui lòng chọn tỉnh/thành phố.</div>
					</div>
					<div class="col-md">
						<label for="districtDropdown" class="form-label text-white fw-semibold">
							Quận/Huyện <span class="text-danger">*</span>
						</label>
						<select id="districtDropdown" class="form-control text-white bg-transparent border-light" required>
							<option value="">Chọn quận/huyện...</option>
						</select>
						<input name="DistrictName" type="hidden" id="districtName" />
						<div class="invalid-feedback">Vui lòng chọn quận/huyện.</div>
					</div>

					<div class="col-md">
						<label for="wardDropdown" class="form-label text-white fw-semibold">
							Phường/Xã
						</label>
						<select id="wardDropdown" class="form-control text-white bg-transparent border-light">
							<option value="">Chọn phường/xã...</option>
						</select>
						<input name="WardName" type="hidden" id="wardName" />
						<div class="invalid-feedback">Vui lòng chọn phường/xã.</div>
					</div>

					<div class="col-md">
						<label for="area" class="form-label text-white">Diện tích (m²)</label>
						<input type="number" id="area" name="area" value="@ViewBag.Area" min="0" step="0.5" class="form-control text-white bg-transparent border-light" placeholder="Diện tích (m²)">
					</div>

					<div class="col-md">
						<label for="minMoney" class="form-label text-white">Giá thấp nhất</label>
						<input type="number" id="minMoney" name="minMoney" min="0" step="10000" class="form-control text-white bg-transparent border-light" placeholder="Tối thiểu (VNĐ)">
					</div>

					<div class="col-md">
						<label for="maxMoney" class="form-label text-white">Giá cao nhất</label>
						<input type="number" id="maxMoney" name="maxMoney" min="0" step="10000" class="form-control text-white bg-transparent border-light" placeholder="Tối đa (VNĐ)">
					</div>

					<div class="col-auto d-flex align-items-end">
						<button type="submit" class="btn btn-primary px-4 h-100 mb-2">Tìm</button>
					</div>
				</div>
			</form>
			<div style="height: 40px;"></div>
		</div>
	</div>
</section>
<section class="ftco-properties" id="properties-section" style="margin-top: 4rem">
	<div class="container-fluid px-md-5">
		<div class="row">
			<div class="col-lg-3 pr-lg-4  ftco-animate">
				<div class="search-wrap">
					<h3 class="mb-5">Tìm kiếm</h3>
					<form asp-controller="Accommodations" asp-action="Index" method="get" class="search-property">
						<div class="row">
							<!-- Loại phòng -->
							<div class="col-md-12">
								<div class="form-group">
									<label>Loại phòng</label>
									<select name="roomType" class="form-control">
										<option value="">Chọn loại phòng</option>
										<option value="Phòng trọ">Phòng trọ</option>
										<option value="Nhà nguyên căn">Nhà nguyên căn</option>
										<option value="Căn hộ ,Chung cư">Căn hộ ,Chung cư</option>
									</select>
								</div>
							</div>

							<!-- Tình trạng nội thất -->
							<div class="col-md-12">
								<div class="form-group">
									<label>Tình trạng nội thất</label>
									<select name="roomStatus" class="form-control">
										<option value="">Chọn tình trạng nội thất</option>
										@foreach (FurnitureStatusEnum status in Enum.GetValues(typeof(FurnitureStatusEnum)))
										{
											<option value="@FurnitureStatusHelper.GetDisplayName(status)">
												@FurnitureStatusHelper.GetDisplayName(status)
											</option>
										}
									</select>
								</div>
							</div>

							<!-- Số phòng ngủ -->
							<div class="col-md-12">
								<div class="form-group">
									<label>Số phòng ngủ</label>
									<input name="bedroomCount" type="number" min="0" step="1" class="form-control" placeholder="Nhập số phòng ngủ" />
								</div>
							</div>

							<!-- Số phòng tắm -->
							<div class="col-md-12">
								<div class="form-group">
									<label>Số phòng tắm</label>
									<input name="bathroomCount" type="number" min="0" step="1" class="form-control" placeholder="Nhập số phòng tắm" />
								</div>
							</div>

							<div class="col-md-12">
								<button type="submit" class="btn btn-primary">Tìm kiếm</button>
							</div>
						</div>
					</form>

				</div>
			</div><!-- end -->
			<div class="col-lg-9">
				@if (hasSearched && !Model.Any())
				{
					<div class="alert alert-warning text-center mt-3">
						Hiện tại không có phòng nào phù hợp với tiêu chí bạn chọn.
					</div>
				}
				else
				{
					<div class="row">
						@foreach (var item in Model)
						{
							var postedAgo = item.CreatedAt.HasValue
							? (DateTime.Now - item.CreatedAt.Value) switch
							{
								var d when d.TotalHours < 1 => "Vừa đăng",
								var d when d.TotalHours < 24 => $"{(int)d.TotalHours} giờ trước",
								var d => $"{(int)d.TotalDays} ngày trước"
							} : "";

							var typeEnum = BadgeHelper.ParsePackageType(item.PackageTypeName);
							var isVip = BadgeHelper.IsVip(typeEnum);
							var isDiamond = typeEnum == PackageTypeEnum.Diamond;
							var isGold = typeEnum == PackageTypeEnum.Gold;
							var isSilver = typeEnum == PackageTypeEnum.Silver;
							var isNormal = typeEnum == PackageTypeEnum.Normal;
							var phone = item.PhoneNumber;
							var maskedPhone = string.IsNullOrEmpty(phone) || phone.Length < 3 ? phone : phone[..^3] + "XXX";

							<div class="col-md-12">
								<div class="ftco-animate properties d-flex border rounded overflow-hidden shadow-sm bg-white" style="min-height: 200px; margin-bottom: 15px">
									<div class="flex-shrink-0"
										 style="width: @(isDiamond ? "370px" : isGold ? "320px" : isSilver ? "270px" : "200px");
												height: @(isDiamond ? "380px" : isGold ? "300px" : isSilver ? "230px" : "180px");
												overflow: hidden;">
										@if (isDiamond)
										{
											var images = item.ListImages?.Take(6).ToList() ?? new List<string> { item.ImageUrl };
											<div class="h-100 d-flex flex-column gap-1">
												@if (images.Count > 0)
												{
													<div class="flex-grow-1" style="height: 110px;">
														<img src="@images[0]" class="img-fluid w-100 h-100 rounded" style="object-fit: cover;" />
													</div>
												}
												@if (images.Count > 1)
												{
													<div class="d-flex gap-1 mt-1" style="height: 85px;">
														@for (int i = 1; i < Math.Min(images.Count, 6); i++)
														{
															<div class="flex-fill">
																<img src="@images[i]" class="img-fluid w-100 h-100 rounded" style="object-fit: contain;" />
															</div>
														}
													</div>
												}
											</div>
										}
										else if (isGold)
										{
											var images = item.ListImages?.Take(4).ToList() ?? new List<string> { item.ImageUrl };
											<div class="h-100 d-flex flex-column gap-1">
												@if (images.Count > 0)
												{
													<div class="flex-grow-1" style="height: 185px;">
														<img src="@images[0]" class="img-fluid w-100 h-100 rounded" style="object-fit: cover;" />
													</div>
												}
												@if (images.Count > 1)
												{
													<div class="d-flex gap-1 mt-1" style="height: 85px;">
														@for (int i = 1; i < Math.Min(images.Count, 3); i++)
														{
															<div class="flex-fill mx-1">
																<img src="@images[i]" class="img-fluid w-100 h-100 rounded" style="object-fit: cover;" />
															</div>
														}
													</div>
												}
											</div>
										}
										else
										{
											<img src="@item.ImageUrl" alt="@item.Title" class="img-fluid h-100 w-100" style="object-fit: cover;">
										}

										@if (item.PackageTypeName != PackageTypeEnum.Normal.GetDisplayName())
										{
											<span id="packageBadgeVIP"
												  class="badge position-absolute @BadgeHelper.GetBadgeClass(item.PackageTypeName)"
												  style="color: #fff; top: 8px; left: 8px; font-size: 15px; padding: 8px; z-index: 1000">
												@item.PackageTypeName
											</span>
										}
									</div>

									<div class="flex-grow-1 p-3 d-flex flex-column justify-content-between">
										<div>
											<h5 class="mb-1">
												<a href="@Url.RouteUrl("PostDetailRoute", new { postId = item.Id })" class="text-dark font-weight-bold text-decoration-none">
													@item.Title
												</a>
											</h5>
											<div class="my-2 text-danger font-weight-semibold">
												@(((item.Price ?? 0) / 1_000_000M).ToString("0.#").Replace('.', ',')) triệu/tháng
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">@item.Area m²</span>
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">
													@item.BedroomCount
													<svg fill="#000000" width="24px" height="24px" viewBox="0 0 28 28" id="bedroom-8" data-name="Flat Line" xmlns="http://www.w3.org/2000/svg" class="icon flat-line" stroke="#000000" transform="matrix(1, 0, 0, 1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" stroke="#CCCCCC" stroke-width="0.144"></g><g id="SVGRepo_iconCarrier"><path id="secondary" d="M10,5h4a1,1,0,0,1,1,1V22a1,1,0,0,1-1,1H9a0,0,0,0,1,0,0V6a1,1,0,0,1,1-1Z" transform="translate(26 2) rotate(90)" style="fill: #ffffff; stroke-width:1.248;"></path><path id="primary" d="M7,11H3V7A2,2,0,0,1,5,5H5A2,2,0,0,1,7,7ZM5,17v2m14-2v2m2-3V12a1,1,0,0,0-1-1H3v5a1,1,0,0,0,1,1H20A1,1,0,0,0,21,16Z" style="fill: none; stroke: #000000; stroke-linecap: round; stroke-linejoin: round; stroke-width:1.248;"></path></g></svg>
												</span>
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">
													@item.BathroomCount
													<svg height="24px" width="24px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 650 650" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path style="fill:#ffffff;" d="M484.615,197.061v24.064c0,0.61,0,1.208-0.012,1.817c-0.966,92.403-76.184,167.011-168.806,167.011 h-205.42c-45.839,0-82.994-37.155-82.994-82.994V197.061L484.615,197.061L484.615,197.061z"></path> <path style="fill:#000000;" d="M358.928,370.978H153.514c-45.839,0-83-37.16-83-83v-90.919H27.38v109.898c0,45.839,37.16,83,83,83 h205.414c32.59,0,63.018-9.244,88.821-25.24C390.082,368.793,374.761,370.978,358.928,370.978z"></path> <path style="fill:#ffffff;" d="M484.394,157.766H27.606c-10.481,0-18.979,8.497-18.979,18.979v1.337 c0,10.481,8.497,18.979,18.979,18.979h456.788c10.482,0,18.979-8.497,18.979-18.979v-1.337 C503.373,166.263,494.876,157.766,484.394,157.766z"></path> <path style="fill:#000000;" d="M78.285,177.413L78.285,177.413c0-10.851,8.796-19.647,19.647-19.647H28.274 c-10.851,0-19.647,8.796-19.647,19.647l0,0c0,10.851,8.796,19.647,19.647,19.647h69.657 C87.081,197.06,78.285,188.264,78.285,177.413z"></path> <polyline style="fill:#ffffff;" points="62.646,373.436 35.865,443.54 66.228,443.54 139.458,389.958 "></polyline> <path style="fill:#000000;" d="M484.615,197.061v24.064c0,0.61,0,1.208-0.012,1.817H27.384v-25.882H484.615z"></path> <polyline style="fill:#ffffff;" points="351.467,384.972 431.5,443.535 461.866,443.535 424.903,346.749 424.796,346.487 "></polyline> <path d="M512,177.413c0-15.59-12.683-28.274-28.274-28.274h-83.5c-4.765,0-8.627,3.863-8.627,8.627c0,4.765,3.863,8.627,8.627,8.627 h83.5c6.076,0,11.02,4.943,11.02,11.02c0,6.077-4.943,11.02-11.02,11.02H28.274c-6.076,0-11.02-4.943-11.02-11.02 c0-6.076,4.943-11.02,11.02-11.02h335.041c4.765,0,8.627-3.863,8.627-8.627c0-4.765-3.863-8.627-8.627-8.627H51.637V97.04 c0-11,8.949-19.951,19.951-19.951c11,0,19.95,8.949,19.95,19.951v1.786c0,4.765,3.863,8.627,8.627,8.627 c4.765,0,8.627-3.863,8.627-8.627V97.04c0-20.514-16.69-37.205-37.205-37.205c-20.514,0-37.204,16.69-37.204,37.205v52.099h-6.108 C12.684,149.139,0,161.822,0,177.413c0,12.251,7.834,22.703,18.753,26.621v43.037c0,4.765,3.863,8.627,8.627,8.627 s8.627-3.863,8.627-8.627v-41.383h439.985v9.503c0,18.385-2.98,36.444-8.858,53.675c-1.538,4.509,0.87,9.412,5.38,10.951 c0.923,0.315,1.862,0.465,2.786,0.465c3.589,0,6.941-2.257,8.165-5.845c6.492-19.028,9.783-38.961,9.783-59.245v-11.156 C504.167,200.116,512,189.664,512,177.413z"></path> <path d="M435.064,349.171c13.018-12.172,24.271-26.213,33.296-41.681c2.401-4.116,1.011-9.398-3.103-11.8 c-4.117-2.4-9.398-1.011-11.8,3.104c-14.389,24.66-35.01,45.334-59.635,59.788c-25.357,14.883-54.393,22.749-83.97,22.749h-196.55 c-42.62,0-77.293-34.673-77.293-77.293v-23.031c0-4.765-3.863-8.627-8.627-8.627s-8.627,3.863-8.627,8.627v23.03 c0,28.921,13.066,54.836,33.59,72.193L27.806,440.46c-1.012,2.651-0.657,5.632,0.954,7.97c1.61,2.339,4.268,3.735,7.107,3.735 h30.363c1.831,0,3.617-0.583,5.095-1.664l70.954-51.917h167.575c13.402,0,26.698-1.487,39.662-4.352l76.893,56.264 c1.478,1.081,3.262,1.664,5.095,1.664h30.364c2.839,0,5.496-1.396,7.105-3.735s1.966-5.319,0.954-7.97L435.064,349.171z M63.41,434.912H48.395l18.538-48.526c13.647,7.714,29.379,12.151,46.131,12.192L63.41,434.912z M434.319,434.908l-63.755-46.651 c11.087-3.882,21.808-8.819,31.991-14.795c6.444-3.782,12.629-7.962,18.543-12.483l28.236,73.93H434.319z"></path> </g></svg>
												</span>
											</div>

											@{
												var fullAddress = $"{item.Address}, {item.WardName}, {item.DistrictName}, {item.ProvinceName}";
											}
											<p class="text-muted mt-1 mb-2">@fullAddress</p>
										</div>

										<div class="d-flex justify-content-between align-items-center small">
											<span class="text-secondary">@postedAgo</span>
											<div class="d-flex align-items-center">
												@if (isDiamond || isGold)
												{
													<button class="btn btn-success mr-2 phone-btn"
															data-full-phone="@phone"
															data-post-id="@item.Id"
															id="phoneBtn-@item.Id">
														<i class="fa fa-phone"></i> @maskedPhone
													</button>
												}
												<button class="btn btn-light border favorite-btn" data-post-id="@item.Id">
													<i class="fas fa-heart" id="heart-@item.Id"></i>
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						}

					</div>
				}
			</div>
		</div>
	</div>
</section>
@Html.AntiForgeryToken()
<div id="custom-toast" class="custom-toast"></div>
@section script {
	<script src="~/js/jquery.min.js"></script>
	<script src="~/js/address.js"></script>
	<script src="~/js/filter.js"></script>
	<script>
		const selectedProvinceId = '@TempData["provinceId"]';
		const selectedDistrictId = '@TempData["districtId"]';
		const selectedWardId = '@TempData["wardId"]';

		document.addEventListener('DOMContentLoaded', function () {
			fetchProvinces().then(() => {
				if (selectedProvinceId) {
					document.getElementById('provinceDropdown').value = selectedProvinceId;
					fetchDistrict(selectedProvinceId).then(() => {
						if (selectedDistrictId) {
							document.getElementById('districtDropdown').value = selectedDistrictId;
							fetchWard(selectedDistrictId).then(() => {
								if (selectedWardId) {
									document.getElementById('wardDropdown').value = selectedWardId;
								}
							});
						}
					});
				}
			});
		});

	</script>
}
<script src="~/js/common/show-toast.js"></script>
<script src="~/js/favorite-post/add-favorite.js"></script>
<script>
	document.querySelector("form").addEventListener("submit", function (e) {
		document.getElementById("provinceId").value = document.getElementById("provinceDropdown").value;
		document.getElementById("districtId").value = document.getElementById("districtDropdown").value;
		document.getElementById("wardId").value = document.getElementById("wardDropdown").value;
		document.getElementById("provinceName").value = document.getElementById("provinceDropdown").selectedOptions[0].text;
		document.getElementById("districtName").value = document.getElementById("districtDropdown").selectedOptions[0].text;
		document.getElementById("wardName").value = document.getElementById("wardDropdown").selectedOptions[0].text;
	});

	document.addEventListener("DOMContentLoaded", function () {
		const phoneButtons = document.querySelectorAll(".phone-btn");

		phoneButtons.forEach(btn => {
			btn.addEventListener("click", function () {
				const fullPhone = btn.getAttribute("data-full-phone");
				btn.innerHTML = `<i class="fa fa-phone"></i> ${fullPhone}`;
				btn.classList.remove("btn-success");
				btn.classList.add("btn-outline-success");
				btn.disabled = true;
			});
		});
	});
</script>

